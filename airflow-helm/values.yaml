airflow:
  image:
    repository: apache/airflow
    tag: 2.8.3
    
  executor: KubernetesExecutor
  
  legacyCommands: false

  fernetKey: "7T512UXSSmBOkpWimFHIVb8jK6lfmSAvx4mO6Arehnc="

  webserverSecretKey: "THIS IS UNSAFE!"

  config:
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "False"
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"

  users:
    - username: admin
      password: admin
      role: Admin
      email: admin@example.com
      firstName: admin
      lastName: admin

  connections: []

  variables: []

  pools: []

  extraPipPackages: []

  extraEnv: []

  extraVolumeMounts: []

  extraVolumes: []

  kubernetesPodTemplate:
    stringOverride: ""
    resources: {}
    extraPipPackages: []
    extraVolumeMounts: []
    extraVolumes: []
scheduler:
  replicas: 1
  resources: {}
  
  logCleanup:
    enabled: true
    retentionMinutes: 21600

  livenessProbe:
    enabled: true

    taskCreationCheck:
      enabled: false
      thresholdSeconds: 300
      schedulerAgeBeforeCheck: 180

web:
  replicas: 1

  resources: {}

  service:
    type: ClusterIP
    externalPort: 8080

  ## configs generating the `webserver_config.py` file
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/configuration/airflow-configs.md#webserver_configpy
  webserverConfig:
    ## the full content of the `webserver_config.py` file (as a string)
    stringOverride: |
      from airflow import configuration as conf
      from flask_appbuilder.security.manager import AUTH_DB
      
      # the SQLAlchemy connection string
      SQLALCHEMY_DATABASE_URI = conf.get("core", "SQL_ALCHEMY_CONN")
      
      # use embedded DB for auth
      AUTH_TYPE = AUTH_DB

    ## the name of a Secret containing a `webserver_config.py` key
    existingSecret: ""

workers:
  enabled: false

triggerer:
  enabled: true

  replicas: 1

  resources: {}

  capacity: 1000

flower:
  enabled: false

logs:
  path: /opt/airflow/logs

  persistence:
    enabled: false

dags:
  path: /opt/airflow/dags

  persistence:
    enabled: false

  gitSync:
    enabled: false

ingress:
  enabled: false

serviceAccount:
  create: true
  name: ""
  annotations: {}

extraManifests: []

pgbouncer:
  enabled: true

  resources: {}

  authType: md5

postgresql:
  enabled: false

externalDatabase:
  type: postgres
  
  host: postgres.example.org
  port: 5432
  
  database: airflow_cluster1

  ## (username - option 1) a plain-text helm value
  user: my_airflow_user
  
  ## (username - option 2) a Kubernetes secret in your airflow namespace
  #userSecret: "airflow-cluster1-database-credentials"
  #userSecretKey: "username"

  ## (password - option 1) a plain-text helm value
  password: my_airflow_password

  ## (password - option 2) a Kubernetes secret in your airflow namespace
  #passwordSecret: "airflow-cluster1-database-credentials"
  #passwordSecretKey: "password"

  ## use this for any extra connection-string settings, e.g. ?sslmode=disable
  properties: ""

redis:
  enabled: false

externalRedis:
  ## the host of the external redis
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/database/external-redis.md
  host: localhost
